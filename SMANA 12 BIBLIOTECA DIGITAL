class Libro:
    def __init__(self, titulo, autor, categoria, isbn):
        self.titulo_autor = (titulo, autor)
        self.categoria = categoria
        self.isbn = isbn

    def __str__(self):
        return f"ISBN: {self.isbn}, Título: {self.titulo_autor[0]}, Autor: {self.titulo_autor[1]}, Categoría: {self.categoria}"

class Usuario:
    def __init__(self, nombre, id_usuario):
        self.nombre = nombre
        self.id_usuario = id_usuario
        self.libros_prestados = []

    def __str__(self):
        return f"ID: {self.id_usuario}, Nombre: {self.nombre}, Libros prestados: {[libro.titulo_autor[0] for libro in self.libros_prestados]}"

class Biblioteca:
    def __init__(self):
        self.libros = {}
        self.usuarios = set()
        self.usuarios_data = {}

    def agregar_libro(self, libro):
        if libro.isbn not in self.libros:
            self.libros[libro.isbn] = libro
            print(f"Libro '{libro.titulo_autor[0]}' agregado.")
        else:
            print(f"Libro con ISBN '{libro.isbn}' ya existe.")

    def quitar_libro(self, isbn):
        if isbn in self.libros:
            del self.libros[isbn]
            print(f"Libro con ISBN '{isbn}' eliminado.")
        else:
            print(f"Libro con ISBN '{isbn}' no encontrado.")

    def registrar_usuario(self, usuario):
        if usuario.id_usuario not in self.usuarios:
            self.usuarios.add(usuario.id_usuario)
            self.usuarios_data[usuario.id_usuario] = usuario
            print(f"Usuario '{usuario.nombre}' registrado.")
        else:
            print(f"Usuario con ID '{usuario.id_usuario}' ya existe.")

    def dar_baja_usuario(self, id_usuario):
        if id_usuario in self.usuarios:
            self.usuarios.remove(id_usuario)
            del self.usuarios_data[id_usuario]
            print(f"Usuario con ID '{id_usuario}' dado de baja.")
        else:
            print(f"Usuario con ID '{id_usuario}' no encontrado.")

    def prestar_libro(self, id_usuario, isbn):
        if id_usuario in self.usuarios and isbn in self.libros:
            usuario = self.usuarios_data[id_usuario]
            libro = self.libros[isbn]
            if libro not in usuario.libros_prestados:
                usuario.libros_prestados.append(libro)
                print(f"Libro '{libro.titulo_autor[0]}' prestado a '{usuario.nombre}'.")
            else:
                print(f"Libro '{libro.titulo_autor[0]}' ya prestado a '{usuario.nombre}'.")
        else:
            print("Usuario o libro no encontrado.")

    def devolver_libro(self, id_usuario, isbn):
        if id_usuario in self.usuarios and isbn in self.libros:
            usuario = self.usuarios_data[id_usuario]
            libro = self.libros[isbn]
            if libro in usuario.libros_prestados:
                usuario.libros_prestados.remove(libro)
                print(f"Libro '{libro.titulo_autor[0]}' devuelto por '{usuario.nombre}'.")
            else:
                print(f"Libro '{libro.titulo_autor[0]}' no prestado a '{usuario.nombre}'.")
        else:
            print("Usuario o libro no encontrado.")

    def buscar_libros(self, criterio, valor):
        resultados = []
        for libro in self.libros.values():
            if criterio == 'titulo' and valor.lower() in libro.titulo_autor[0].lower():
                resultados.append(libro)
            elif criterio == 'autor' and valor.lower() in libro.titulo_autor[1].lower():
                resultados.append(libro)
            elif criterio == 'categoria' and valor.lower() in libro.categoria.lower():
                resultados.append(libro)
        return resultados

    def listar_libros_prestados(self, id_usuario):
        if id_usuario in self.usuarios:
            usuario = self.usuarios_data[id_usuario]
            return usuario.libros_prestados
        else:
            return None

def menu():
    biblioteca = Biblioteca()
    while True:
        print("\n1. Añadir Libro  2. Quitar Libro  3. Registrar Usuario  4. Dar Baja Usuario")
        print("5. Prestar Libro  6. Devolver Libro  7. Buscar Libros  8. Libros Prestados")
        print("9. Salir")

        opcion = input("Opción: ")

        if opcion == '1':
            titulo = input("Título: ")
            autor = input("Autor: ")
            categoria = input("Categoría: ")
            isbn = input("ISBN: ")
            biblioteca.agregar_libro(Libro(titulo, autor, categoria, isbn))
        elif opcion == '2':
            isbn = input("ISBN: ")
            biblioteca.quitar_libro(isbn)
        elif opcion == '3':
            nombre = input("Nombre: ")
            id_usuario = input("ID Usuario: ")
            biblioteca.registrar_usuario(Usuario(nombre, id_usuario))
        elif opcion == '4':
            id_usuario = input("ID Usuario: ")
            biblioteca.dar_baja_usuario(id_usuario)
        elif opcion == '5':
            id_usuario = input("ID Usuario: ")
            isbn = input("ISBN: ")
            biblioteca.prestar_libro(id_usuario, isbn)
        elif opcion == '6':
            id_usuario = input("ID Usuario: ")
            isbn = input("ISBN: ")
            biblioteca.devolver_libro(id_usuario, isbn)
        elif opcion == '7':
            criterio = input("Criterio (titulo/autor/categoria): ")
            valor = input("Valor: ")
            resultados = biblioteca.buscar_libros(criterio, valor)
            for libro in resultados:
                print(libro)
        elif opcion == '8':
            id_usuario = input("ID Usuario: ")
            libros_prestados = biblioteca.listar_libros_prestados(id_usuario)
            if libros_prestados:
                for libro in libros_prestados:
                    print(libro)
            else:
                print("Usuario no encontrado.")
        elif opcion == '9':
            break
        else:
            print("Opción inválida.")

if __name__ == "__main__":
    menu()
